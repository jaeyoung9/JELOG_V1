plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'jelog.server'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'
buildDir = 'build'


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'




    // Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.2.1'

    // EnableAspectJAutoProxy 설정
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // lombok 생성오류 해결 annotationProcessor 추가.
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Mybatis 추가
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'
    implementation 'commons-dbcp:commons-dbcp:1.4'

    // mysql 기능 추가
    implementation 'mysql:mysql-connector-java:8.0.29'
    runtimeOnly 'mysql:mysql-connector-java'

    // QueryDSL 추가
    implementation "com.querydsl:querydsl-jpa:5.0.0"
    annotationProcessor(
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            "com.querydsl:querydsl-apt:5.0.0:jpa")

    implementation 'javax.annotation:javax.annotation-api:1.3.2'


    // JsonObject 추가
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'org.json:json:20190722'

    // Gson 추가
    implementation 'com.google.code.gson:gson:2.8.7'

    // files 서블릿 업로드 기능을 위한.
    implementation 'commons-io:commons-io:2.8.0'
    implementation 'commons-fileupload:commons-fileupload:1.4'

    // JJWT
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.0'

    // h2database
    //runtimeOnly 'com.h2database:h2'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
//    runtimeOnly 'org.postgresql:postgresql'

    //jsp 파일 처리 테스트
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'javax.servlet:jstl'

    // Apache Tiles
//    implementation 'org.springframework.boot:spring-boot-starter-tomcat'
//    implementation 'org.apache.tiles:tiles-core:3.0.8'
//    implementation 'org.apache.tiles:tiles-jsp:3.0.8'
//    implementation 'org.apache.tiles:tiles-servlet:3.0.8'
//    implementation 'org.apache.tiles:tiles-extras:3.0.8'
//    implementation 'javax.servlet:jstl:1.2'



}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        resources {
            srcDirs += ['src/main/resources']
            srcDirs += ['src/main/resources/static']
            srcDirs += ['src/main/webapp']
        }
    }
}

jar {
    from(sourceSets.main.output)
    from(sourceSets.main.resources) {
        include 'application.yml'
        include 'application.properties'
    }
    include 'META-INF/spring.factories'
    manifest {
        attributes 'Main-Class': 'jelog.server.main.JelogApplication'
    }
}